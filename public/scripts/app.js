(()=>{var h=t=>{let e=JSON.parse(t);if(e.type==="echo")return{type:"info",payload:e.payload};if(e.type==="info"){console.log(`[ws]: ${e.payload}`);return}if(e.type==="abc")return{type:"abc",payload:e.payload};if(e.type==="gene")return{type:"gene",payload:e.payload};throw new Error(`Unknown message type: ${t}`)};var c=(...t)=>t.reduce((e,n)=>e+n)/t.length,k=(...t)=>c(...t.map(e=>e**2))-c(...t)**2,L=(t,e)=>c(...t.map((n,o)=>n*e[o]))-c(...t)*c(...e),p=(t,e)=>{let n=L(t,e)/k(...t),o=c(...e)-n*c(...t);return{a:n,b:o}},T=(t,e)=>{let n=t.length,o=t.reduce((i,u)=>i+u**2),{a:s,b:a}=p(t,e),d=Math.sqrt(1/(n-2)*t.reduce((i,u,b)=>i+(e[b]-a-s*t[b])**2)),y=t.length*t.reduce((i,u)=>i+u**2),N=2*Math.sqrt(d*Math.sqrt(n/y)),A=2*Math.sqrt(d*Math.sqrt(o/y));return{ua:N,ub:A}},D=(t,e)=>{let n=p(t,e),o=p(e,t);return n.a*o.a},v=(t,e)=>{let{a:n,b:o}=p(t,e),{ua:s,ub:a}=T(t,e);return{a:n,b:o,ua:s,ub:a,r2:D(t,e)}};var l=new WebSocket("ws://localhost:3000"),w,m;l.onerror=t=>{console.error(`[ws]: ${t}`)};l.onopen=t=>{console.log("[ws]: Connected to ws://localhost:3000");let e={type:"echo",payload:"ready"};l.send(JSON.stringify(e))};l.onmessage=t=>{let e=h(t.data);(e==null?void 0:e.type)==="abc"&&(w=e==null?void 0:e.payload),(e==null?void 0:e.type)==="gene"&&(m=e==null?void 0:e.payload),e!==void 0&&l.send(JSON.stringify({type:"info",payload:"client recived"}))};var r=t=>{let e=document.querySelectorAll(t);return e.length===1?e[0]:Array.from(e)},E=r("#abc-tabs>button");E.forEach(t=>{t.addEventListener("click",()=>{E.forEach(e=>{e.classList.remove("active"),e.value!==""&&(r(`#${e.value}`).style.display="none")}),t.classList.add("active"),t.value!==""&&(r(`#${t.value}`).style.display="block")})});var M=(t,e)=>{let n=JSON.stringify(t);console.log(n),alert("Data printed in console")},f=r("#load-button"),S=r("#folder-path"),J=r("#forced-focus"),g=r("#export-data");f.addEventListener("click",()=>{var t,e;if(f.value==="abc"){let n=(e=(t=J.value)==null?void 0:t.split(","))==null?void 0:e.map(o=>{var s;return(s=parseInt(o))!=null?s:[]});l.send(JSON.stringify({type:"abc",payload:{path:S.value,forcedFocus:n}}))}f.value==="gene"&&l.send(JSON.stringify({type:"gene",payload:{path:S.value,config:{width:10,rise:5,fall:5}}}))});g.addEventListener("click",()=>{g.value==="abc"&&M(w,"abc.json"),g.value==="gene"&&M(m,"gene.json")});window.location.pathname==="/gene"&&r("#trace-graph").addEventListener("click",()=>{let t=m.sort((a,d)=>a.voltage-d.voltage),n=[{x:t.map(a=>a.voltage),y:t.map(a=>a.mean),error_y:{type:"data",array:t.map(a=>a.sigma),visible:!0},type:"scatter"}],o={title:"\xC9talonnage g\xE9n\xE9rateur",showlegend:!1,xaxis:{title:"Tension (mV)"},yaxis:{title:"Charge (pC)"}};Graph("gene-graph",n,o,{scrollZoom:!0,editable:!0});let s=v(t.map(a=>a.voltage),t.map(a=>a.mean));r("#gene-stats").innerText=JSON.stringify(s).replaceAll("{",`{
`).replaceAll("}",`
}`).replaceAll(',"',`,
"`)});})();
